{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Web Docs","text":"<p>This is the documentation for the course Web Programming.</p>"},{"location":"#labs","title":"Labs","text":"<ul> <li>Lab-1<ul> <li>Task-1</li> <li>Task-2</li> <li>Task-3</li> <li>Task-4</li> <li>Task-5</li> </ul> </li> <li>Lab-2<ul> <li>Practice-1</li> <li>Practice-2</li> <li>Practice-3</li> <li>Lab-2</li> </ul> </li> <li>Lab-3</li> </ul>"},{"location":"lab-1/task-1/","title":"Task 1","text":""},{"location":"lab-1/task-1/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</p> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:</p> <ul> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>socket</code>.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.</li> </ul> <p>\u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438:</p> <ul> <li>Habr: \u041e\u0441\u043d\u043e\u0432\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438</li> <li>\u0410\u043d\u0434\u0440\u0435\u0439 \u041c\u0430\u043b\u0438\u043d\u0438\u043d: \u0421\u043e\u043a\u0435\u0442\u044b \u0432 Python</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Python: \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0441\u043e\u043a\u0435\u0442\u0430\u043c</li> <li>Python Library Reference: socket</li> <li>\u0412\u0438\u0434\u0435\u043e: \u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438</li> </ul>"},{"location":"lab-1/task-1/#udp-client-and-server","title":"UDP client and server","text":"<p>You can choose specific IP address and port by changing <code>IP</code> and <code>PORT</code> variables.</p> <p>Firstly run <code>python 1-server.py</code></p> <p>Then run <code>python 1-client.py</code></p> <p>You'll see messages in both consoles: \"Hello, server\" and \"Hello, client\".</p>"},{"location":"lab-1/task-1/#code","title":"Code","text":"<p>1-server.py:</p> <pre><code>import socket\n\nIP = '127.0.0.1'\nPORT = 2020\n\nserver = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nserver.bind((IP, PORT))\ndata, address = server.recvfrom(1024)\nprint(data.decode('utf-8'))\nserver.sendto(b'Hello, client\\n', address)\nserver.close()\n</code></pre> <p>1-client.py:</p> <pre><code>import socket\n\nIP = '127.0.0.1'\nPORT = 2020\n\nclient = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nclient.sendto(b'Hello, server\\n', (IP, PORT))\ndata, address = client.recvfrom(1024)\nprint(data.decode('utf-8'))\nclient.close()\n</code></pre>"},{"location":"lab-1/task-2/","title":"Task 2","text":""},{"location":"lab-1/task-2/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443.</p> <p>\u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439:</p> <ol> <li>\u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430.</li> <li>\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430.</li> </ol> <p>\u041f\u043e\u0440\u044f\u0434\u043e\u043a \u0432\u044b\u0431\u043e\u0440\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430: \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u043e\u043c\u0443 \u043d\u043e\u043c\u0435\u0440\u0443 \u0432 \u0436\u0443\u0440\u043d\u0430\u043b\u0435 (\u043f\u044f\u0442\u044b\u0439 \u0441\u0442\u0443\u0434\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 1 \u0438 \u0442.\u0434.).</p> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:</p> <ul> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>socket</code>.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP.</li> </ul>"},{"location":"lab-1/task-2/#parallelogram-area-calculator","title":"Parallelogram area calculator","text":"<p>You can choose specific IP address and port by changing <code>IP</code> and <code>PORT</code> variables.</p> <p>Firstly run <code>python 2-server.py</code></p> <p>Then run <code>python 2-client.py</code></p> <p>Enter numbers into client's console: a, h or a, b, alpha (without commas, space as separator, alpha in degrees).</p> <p>You'll see the result.</p> <pre><code>Parallelogram Area Calculator\nEnter a, h or a, b, alpha: 10 20\nResult: 200.0\n\nParallelogram Area Calculator\nEnter a, h or a, b, alpha: 10 20 30\nResult: 99.99999999999999\n</code></pre>"},{"location":"lab-1/task-2/#code","title":"Code","text":"<p>2-server.py:</p> <pre><code>import socket\nimport math\n\nIP = '127.0.0.1'\nPORT = 2020\n\ndef calc(x):\n  try:\n    x = list(map(float, x.split()))\n  except:\n    return 'Wrong format'\n  if len(x) == 2:\n    a, h = x\n    return str(a * h)\n  elif len(x) == 3:\n    a, b, alpha = x\n    return str(a * b * math.sin(math.radians(alpha)))\n  else:\n    return 'Wrong format'\n\nserver = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver.bind((IP, PORT))\nserver.listen()\nclient, address = server.accept()\ndata = client.recv(1024).decode('utf-8')\nclient.send(calc(data).encode('utf-8'))\nclient.shutdown(socket.SHUT_WR)\nserver.close()\n</code></pre> <p>2-client.py:</p> <pre><code>import socket\n\nIP = '127.0.0.1'\nPORT = 2020\n\nprint('Parallelogram Area Calculator')\nx = input('Enter a, h or a, b, alpha: ')\n\nclient = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient.connect((IP, PORT))\nclient.send(x.encode('utf-8'))\ndata = client.recv(1024)\nprint('Result:', data.decode())\nclient.close()\n</code></pre>"},{"location":"lab-1/task-3/","title":"Task 3","text":""},{"location":"lab-1/task-3/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 <code>index.html</code>.</p> <p>\u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438:</p> <ul> <li>ZetCode: \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438</li> </ul> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:</p> <ul> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>socket</code>.</li> </ul>"},{"location":"lab-1/task-3/#http-server","title":"HTTP server","text":"<p>You can choose specific IP address and port by changing <code>IP</code> and <code>PORT</code> variables.</p> <p>In order to connect to the server enter <code>127.0.0.1:PORT</code> into your browser's URL field.</p> <p>You'll see <code>index.html</code> web page.</p>"},{"location":"lab-1/task-3/#code","title":"Code","text":"<p>3.py:</p> <pre><code>import socket\n\nIP = '127.0.0.1'\nPORT = 2020\n\nserver = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver.bind((IP, PORT))\nserver.listen()\nheaders = b'HTTP/1.1 200 OK\\r\\nContent-Type: text/html; charset=utf-8\\r\\n\\r\\n'\ntry:\n  while True:\n    client, address = server.accept()\n    with open('index.html', 'rb') as f:\n      content = f.read()\n    client.send(headers + content)\n    client.shutdown(socket.SHUT_WR)\nexcept KeyboardInterrupt:\n  server.close()\n</code></pre>"},{"location":"lab-1/task-4/","title":"Task 4","text":""},{"location":"lab-1/task-4/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442.</p> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:</p> <ul> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>socket</code>.</li> <li>\u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>threading</code>.</li> </ul> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f:</p> <ul> <li>\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP: 100% \u0431\u0430\u043b\u043b\u043e\u0432.</li> <li>\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b UDP: 80% \u0431\u0430\u043b\u043b\u043e\u0432.</li> <li>\u0414\u043b\u044f UDP \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>threading</code> \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043d\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0435.</li> <li>\u0414\u043b\u044f TCP \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.</li> </ul> <p>\u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438:</p> <ul> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Python: threading</li> <li>WebDevBlog: \u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0438 Python</li> </ul>"},{"location":"lab-1/task-4/#tcp-multiplayer-chat","title":"TCP multiplayer chat","text":"<p>You can choose specific IP address and port by changing <code>IP</code> and <code>PORT</code> variables.</p> <p>Firstly run <code>python 4-server.py</code></p> <p>Then run multiple <code>python 4-client.py</code></p> <p>Enter name on client. Then you will be able to send and receive messages.</p> <p>Server:</p> <pre><code>Chat started...\n('127.0.0.1', 52188) connected\nName is Andrei\n('127.0.0.1', 52195) connected\nName is Alice\n('127.0.0.1', 52499) connected\nName is Dima\n</code></pre> <p>Client 1:</p> <pre><code>Enter name: Andrei\nAndrei joined the chat.\nAlice joined the chat.\nDima joined the chat.\nHello!\nAndrei: Hello!\nAlice: Hi!\nDima: Hello World!\n</code></pre> <p>Client 2:</p> <pre><code>Enter name: Alice \nAlice joined the chat.\nDima joined the chat.\nAndrei: Hello!\nHi!   \nAlice: Hi!\nDima: Hello World!\n</code></pre> <p>Client 3:</p> <pre><code>Enter name: Dima \nDima joined the chat.\nAndrei: Hello!\nAlice: Hi!\nHello World!\nDima: Hello World!\n</code></pre>"},{"location":"lab-1/task-4/#code","title":"Code","text":"<p>4-server.py:</p> <pre><code>import socket\nimport threading\n\nIP = '127.0.0.1'\nPORT = 2020\n\nserver = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver.bind((IP, PORT))\nserver.listen()\n\nclients = []\nnames = []\n\ndef broadcast(message):\n  for i in clients:\n    i.send(message)\n\ndef handle(client):\n  while True:\n    try:\n      index = clients.index(client)\n      name = names[index]\n      message = client.recv(1024)\n      if message:\n        message = f'{name}: '.encode('utf-8') + message\n        broadcast(message)\n    except:\n      clients.remove(client)\n      client.close()\n      broadcast(f'{name} left the chat.'.encode('utf-8'))\n      names.remove(name)\n      break\n\ndef connect():\n  while True:\n    client, address = server.accept()\n    print(address, 'connected')\n    client.send('NAME'.encode('utf-8'))\n    name = client.recv(1024).decode('utf-8')\n    names.append(name)\n    clients.append(client)\n    print('Name is', name)\n    broadcast(f'{name} joined the chat.'.encode('utf-8'))\n    threading.Thread(target=handle, args=(client,)).start()\n\nprint('Chat started...')\nconnect()\n</code></pre> <p>4-client.py:</p> <pre><code>import socket\nimport threading\n\nIP = '127.0.0.1'\nPORT = 2020\n\nname = input('Enter name: ')\n\nclient = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient.connect((IP, PORT))\n\ndef get():\n  while True:\n    try:\n      message = client.recv(1024).decode('utf-8')\n      if message == 'NAME':\n        client.send(name.encode('utf-8'))\n      else:\n        print(message)\n    except Exception as e:\n      print(e)\n      client.close()\n      break\n\ndef send():\n  while True:\n    message = input()\n    client.send(message.encode('utf-8'))\n\nthreading.Thread(target=get).start()\nthreading.Thread(target=send).start()\n</code></pre>"},{"location":"lab-1/task-5/","title":"Task 5","text":""},{"location":"lab-1/task-5/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 <code>socket</code> \u0432 Python.</p> <p>\u0417\u0430\u0434\u0430\u043d\u0438\u0435:</p> <ul> <li>\u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d:<ol> <li>\u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435.</li> <li>\u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</li> </ol> </li> </ul> <p>\u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438:</p> <ul> <li>\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440\u0430</li> <li>\u041c\u0430\u043d\u0443\u0430\u043b \u043f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u0441\u0435\u0440\u0432\u0435\u0440\u0430</li> </ul>"},{"location":"lab-1/task-5/#http-server-with-get-and-post-methods","title":"HTTP server with GET and POST methods","text":"<p>You can choose specific IP address, port and marks path by changing <code>ip</code>, <code>port</code> and <code>marks_path</code> variables.</p> <p>In order to connect to the server enter <code>127.0.0.1:PORT</code> into your browser's URL field.</p> <p>You'll see web page with table of subjects and marks, and form for adding new subject and mark or changing existing. To edit the table enter Subject and Mark, then click Submit.</p> <p>Subjects and marks are stored in <code>marks.json</code>.</p> <p>Used classless CSS to make website prettier.</p> <p>You can choose CSS by uncommenting specific line.</p> <pre><code># content += '&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1/new.min.css\"&gt;'\n# content += '&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/water.min.css\"&gt;'\n# content += '&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/dark.min.css\"&gt;'\ncontent += '&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/light.min.css\"&gt;'\n</code></pre> <p>I recommend new.css or water.css</p> <p>More classless CSS</p>"},{"location":"lab-1/task-5/#code","title":"Code","text":"<p>5-oop.py:</p> <pre><code>import socket\nimport json\n\nfrom urllib.parse import parse_qs\n\nclass Server:\n  server_socket = None\n\n  def __init__(self, ip: str, port: int, marks_path: str):\n    self.ip = ip\n    self.port = port\n    self.marks_path = marks_path\n\n  def __del__(self):\n    self.stop()\n\n  def run(self):\n    self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    self.server_socket.bind((self.ip, self.port))\n    self.server_socket.listen()\n    while True:\n      self.handle_request()\n\n  def stop(self):\n    if self.server_socket is not None:\n      self.server_socket.close()\n\n  def handle_request(self):\n    client, address = self.server_socket.accept()\n    method, path, http, query = self.parse_request(client.recv(1024).decode('utf-8'))\n    if method == 'POST':\n      self.set_mark(query['subject'][0], int(query['mark'][0]))\n    self.send_response(client)\n    client.shutdown(socket.SHUT_WR)\n\n  def parse_request(self, data):\n    data = data.split('\\n')\n    method, path, http = data[0].split()\n    query = None\n    if method == 'POST':\n      query = parse_qs(data[-1])\n    return method, path, http, query\n\n  def set_mark(self, subject: str, mark: int):\n    with open(self.marks_path) as f:\n      m = json.load(f)\n    with open(self.marks_path, 'w') as f:\n      m[subject] = mark\n      json.dump(m, f)\n\n  def send_response(self, client):\n    headers = 'HTTP/1.1 200 OK\\r\\nContent-Type: text/html; charset=utf-8\\r\\n\\r\\n'\n    client.send(headers.encode('utf-8') + self.generate_html().encode('utf-8'))\n\n  def generate_html(self):\n    with open(self.marks_path) as f:\n      m = json.load(f)\n      content = '''&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt;\n      &lt;meta charset=\"UTF-8\"&gt;&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n      &lt;title&gt;Subjects &amp; Marks&lt;/title&gt;'''\n      # content += '&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1/new.min.css\"&gt;'\n      # content += '&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/water.min.css\"&gt;'\n      # content += '&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/dark.min.css\"&gt;'\n      content += '&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/light.min.css\"&gt;'\n      content += '&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Subjects &amp; Marks&lt;/h1&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Subject&lt;/th&gt;&lt;th&gt;Mark&lt;/th&gt;&lt;/tr&gt;'\n      content += '\\n'.join([f'&lt;tr&gt;&lt;td&gt;{i[0]}&lt;/td&gt;&lt;td&gt;{i[1]}&lt;/td&gt;&lt;/tr&gt;' for i in m.items()])\n      content += '''&lt;/table&gt;&lt;br&gt;&lt;form action=\"/\" method=\"POST\"&gt;\n      &lt;label for=\"subject\"&gt;Subject:&lt;/label&gt;&lt;br&gt;\n      &lt;input type=\"text\" name=\"subject\" id=\"subject\"&gt;&lt;br&gt;\n      &lt;label for=\"mark\"&gt;Mark:&lt;/label&gt;&lt;br&gt;\n      &lt;input type=\"number\" name=\"mark\" id=\"mark\" min=\"0\"&gt;&lt;br&gt;\n      &lt;input type=\"submit\"&gt;\n    &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;'''\n      return content\n\nif __name__ == '__main__':\n  ip = '127.0.0.1'\n  port = 2020\n  marks_path = 'marks.json'\n  server = Server(ip, port, marks_path)\n  try:\n    server.run()\n  except KeyboardInterrupt:\n    ...\n</code></pre>"},{"location":"lab-2/lab-2/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2","text":""},{"location":"lab-2/lab-2/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":""},{"location":"lab-2/lab-2/#_2","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0431 \u0441\u0435\u0440\u0432\u0438\u0441, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f (\u0441\u0442\u0443\u0434\u0435\u043d\u0442 \u0441 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c 6 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u0434\u0435\u043b\u0430\u0435\u0442 6 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u0441\u0435\u0434\u044c\u043c\u043e\u0439 - \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043d\u043e\u043c\u0435\u0440 1). \u0422\u0435\u043a\u0441\u0442 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0443\u0442. \u0421\u0440\u043e\u043a \u0441\u0434\u0430\u0447\u0438: **** (\u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e)</p> <p>\u041e\u0431\u0440\u0430\u0449\u0430\u0435\u043c \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0438 \u0434\u0435\u043b\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u043e \u043d\u0435\u043c\u0443.  \u0415\u0441\u043b\u0438 \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u0440\u0430\u0438\u0430\u043d\u0442, \u0441\u043e\u0432\u0435\u0442\u0443\u0435\u043c \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0438\u0437 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b \"\u0410\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u044b\u0439 \u0432\u0435\u0431-\u0434\u0438\u0437\u0430\u0439\u043d\" \u0432 \u044d\u0442\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435, \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0435\u0435 \u0412\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0440\u0430\u0431\u043e\u0442\u0430\u0445.</p>"},{"location":"lab-2/lab-2/#_3","title":"\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0431\u0430\u043b\u043b\u0430.","text":"<p>\u0427\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0434\u043b\u0438\u0442\u044c \u0441\u0440\u043e\u043a, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u043d\u044e (\u043c\u0435\u043d\u044e \u0441 \u0431\u0443\u0442\u0441\u0440\u0430\u043f - https://www.youtube.com/watch?v=HEPTgggsRgY) - \u0420\u0435\u0430\u043b\u0438\u0437\u0432\u0430\u0442\u044c \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446 (\u0442\u0430\u043a \u0441\u0435\u0431\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 - https://evileg.com/ru/post/10/ , \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 - https://evileg.com/ru/post/237/) - \u0412\u043d\u0435\u0434\u0440\u0438\u0442\u044c \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f (https://evileg.com/ru/post/21/)</p>"},{"location":"lab-2/lab-2/#_4","title":"\u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b","text":"<p>\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e - \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442 \u0443\u0440\u043e\u043a\u043e\u0432 \u043f\u043e \u0434\u0436\u0430\u043d\u0433\u043e \u0434\u043b\u044f \u0442\u0435\u0445 \u043a\u0442\u043e \u0445\u043e\u0447\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e \u0438\u0437\u0443\u0447\u0438\u0442\u044c, \u043a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0434\u0436\u0430\u043d\u0433\u043e \u0432\u0435\u0431 \u0444\u0440\u0435\u043c\u0439\u0432\u043e\u0440\u043a \u0438 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u044d\u0442\u0438\u043c \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c.</p> <p>\u0411\u0430\u0437\u043e\u0432\u043e - \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u043e\u043d\u044f\u0442\u044c, \u043a\u0430\u043a \u0438 \u0447\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043b\u0430\u0431\u0443.</p>"},{"location":"lab-2/lab-2/#no2","title":"\u0421\u0434\u0430\u0447\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u21162","text":"<p>\u0412\u0441\u0435 \u0444\u0430\u0439\u043b\u044b \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0432 \u043f\u0430\u043f\u043a\u0443 students/\u0433\u0440\u0443\u043f\u043f\u0430/laboratory_works/\u0444\u0430\u043c\u0438\u043b\u0438\u044f_\u0438\u043c\u044f/laboratory_work_2. \u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u0438\u0436\u0435. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043e \u0444\u0430\u0439\u043b\u0435 gitignor.</p> <p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0442\u0447\u0435\u0442. \u0412\u0441\u0435 \u043e\u0442\u0447\u0435\u0442\u044b \u0434\u0435\u043b\u0430\u044e\u0442\u0441\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 markdown \u0438 mkdocs. \u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u0435\u043a \u0438\u0437 markdown \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 mkdocs \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u0443\u0442 \u0432 \u043f\u0443\u043d\u043a\u0442\u0435 3.2.2 https://docs.google.com/document/d/1rIfREFvCB4pp8uF990Tz3PLXRJ5u_w-Y3vLxfXWKoxg/edit?usp=sharing . \u041a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 markdown \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0432 \u043f\u0443\u043d\u043a\u0442\u0435 3.1</p> <p>\u041a\u0430\u043a \u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0443\u043b-\u0440\u0435\u043a\u0432\u0435\u0441\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u043e \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u0421\u0434\u0430\u0447\u0430 \u0440\u0430\u0431\u043e\u0442</p>"},{"location":"lab-2/lab-2/#_5","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442","text":"<p>C\u0430\u0439\u0442 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0438 \u043d\u0430\u0443\u0447\u043d\u043e-\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u042e\u0442\u0443\u0431 \u043a\u0430\u043d\u0430\u043b\u043e\u0432.</p> <p>\u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u0430\u043d\u0430\u043b\u0430\u0445 (id, url, title, views, subs, videos, lang, category, theme, icon, ...), \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u0445, \u043e\u0442\u0437\u044b\u0432\u0430\u0445.</p> <p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b:</p> <ul> <li>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439</li> <li>\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043a\u0430\u043d\u0430\u043b\u044b</li> <li>\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043a\u0430\u043d\u0430\u043b\u0430\u043c \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u0438 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c</li> <li>\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0434\u043e\u0431\u0440\u044f\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043a\u0430\u043d\u0430\u043b\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin</li> <li>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0442\u043e\u043f\u043e\u043c \u043a\u0430\u043d\u0430\u043b\u043e\u0432</li> <li>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043a\u0430\u043d\u0430\u043b\u0430 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0438 \u0434\u0440\u0443\u0433\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439</li> <li>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 API \u042e\u0442\u0443\u0431\u0430</li> </ul>"},{"location":"lab-2/lab-2/#code","title":"Code","text":"<p>settings.py:</p> <pre><code>...\nINSTALLED_APPS = [\n  ...\n  'youtube',\n  'users',\n]\n...\n# TIME_ZONE = 'UTC'\nTIME_ZONE = 'Europe/Moscow'\n...\nLOGIN_URL = 'users:login'\n</code></pre> <p>urls.py</p> <pre><code>urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('youtube/', include('youtube.urls')),\n    path('users/', include('users.urls', namespace='users'))\n]\nhandler404 = page_not_found\n</code></pre>"},{"location":"lab-2/lab-2/#youtube-app","title":"YouTube App","text":"<p>admin.py:</p> <pre><code>from django.contrib import admin\n\nfrom .models import Channel, Review\n\nclass ChannelAdmin(admin.ModelAdmin):\n  list_display = ('title', 'user', 'is_approved', 'time_create')\n  ordering = ('-time_create', 'title')\n  list_editable = ('is_approved',)\n\nclass ReviewAdmin(admin.ModelAdmin):\n  list_display = ('channel', 'user', 'rating', 'time_create')\n  list_display_links = ('channel', 'user')\n  ordering = ('-time_create', 'channel')\n\nadmin.site.register(Channel, ChannelAdmin)\nadmin.site.register(Review, ReviewAdmin)\n</code></pre> <p>forms.py:</p> <pre><code>from django import forms\nfrom .models import Channel, Review\n\nclass AddChannelForm(forms.ModelForm):\n  class Meta:\n    model = Channel\n    fields = ['url', 'lang', 'category', 'theme']\n\nclass AddReviewForm(forms.ModelForm):\n  class Meta:\n    model = Review\n    fields = ['rating', 'text']\n</code></pre> <p>urls.py:</p> <pre><code>from django.urls import path, re_path\nfrom . import views\n\nurlpatterns = [\n  path('', views.index, name='home'),\n  path('top/', views.top, name='top'),\n  re_path(r'^channel/(?P&lt;channel_id&gt;[a-zA-Z0-9_-]{24})/$', views.channel, name='channel'),\n  path('channel/add/', views.add_channel, name='add-channel'),\n  re_path(r'^add-review/(?P&lt;channel_id&gt;[a-zA-Z0-9_-]{24})/$', views.add_review, name='add-review'),\n]\n</code></pre> <p>templatetags/youtube_tags.py</p> <pre><code>from django import template\n\nregister = template.Library()\n\n@register.filter()\ndef intformat(n):\n  return ((f'{str(n)[:-9]}.{str(n)[-9]}B' if n &gt;= 1000000000 else f'{str(n)[:-6]}.{str(n)[-6]}M') if n &gt;= 1000000 else f'{str(n)[:-3]}.{str(n)[-3]}K') if n &gt;= 1000 else n\n</code></pre> <p>models.py:</p> <pre><code>from django.db import models\nfrom django.urls import reverse\nfrom django.conf import settings\n\nclass Channel(models.Model):\n  CATEGORIES = (\n    ('popsci', '\u041d\u0430\u0443\u0447\u043f\u043e\u043f'),\n    ('edu', '\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435'),\n  )\n  THEMES = (\n    ('all', '\u0420\u0430\u0437\u043d\u043e\u0435'),\n    ('it', 'IT'),\n    ('programming', '\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435'),\n    ('physics', '\u0424\u0438\u0437\u0438\u043a\u0430'),\n    ('chemistry', '\u0425\u0438\u043c\u0438\u044f'),\n    ('space', '\u041a\u043e\u0441\u043c\u043e\u0441'),\n    ('math', '\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430'),\n    ('history', '\u0418\u0441\u0442\u043e\u0440\u0438\u044f'),\n    ('biology', '\u0411\u0438\u043e\u043b\u043e\u0433\u0438\u044f'),\n    ('medicine', '\u041c\u0435\u0434\u0438\u0446\u0438\u043d\u0430'),\n    ('geography', '\u0413\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u044f'),\n    ('electronics', '\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u0438\u043a\u0430'),\n    ('social', '\u041e\u0431\u0449\u0435\u0441\u0442\u0432\u043e\u0437\u043d\u0430\u043d\u0438\u0435'),\n    ('economics', '\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u043a\u0430'),\n    ('english', '\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439')\n  )\n  LANGS = (\n    ('ru', '\ud83c\uddf7\ud83c\uddfa'),\n    ('en', '\ud83c\uddfa\ud83c\uddf8'),\n    # 'es': '\ud83c\uddea\ud83c\uddf8',\n    # 'de': '\ud83c\udde9\ud83c\uddea',\n    # 'fr': '\ud83c\uddeb\ud83c\uddf7',\n    # 'pt': '\ud83c\udde7\ud83c\uddf7'\n  )\n\n  channel_id = models.CharField(max_length=24, unique=True, db_index=True, primary_key=True)\n  url = models.CharField(max_length=100, unique=True) # 56\n  title = models.CharField(max_length=255)\n  views = models.PositiveBigIntegerField()\n  subs = models.PositiveIntegerField()\n  videos = models.PositiveIntegerField()\n  lang = models.CharField(max_length=2, choices=LANGS) # default='ru'\n  category = models.CharField(max_length=20, choices=CATEGORIES) # default='popsci'\n  theme = models.CharField(max_length=20, choices=THEMES, default='all')\n  icon_default = models.CharField(max_length=200) # 103\n  icon_medium = models.CharField(max_length=200)\n  icon_high = models.CharField(max_length=200)\n  description = models.TextField(blank=True)\n  is_approved = models.BooleanField(default=False) # or null, 3 types?\n  user = models.ForeignKey(settings.AUTH_USER_MODEL, models.CASCADE, blank=True, null=True) # SET_NULL\n  time_create = models.DateTimeField(auto_now_add=True)\n  time_update = models.DateTimeField(auto_now=True)\n\n  def __str__(self):\n    return self.title\n\n  def get_absolute_url(self):\n    return reverse('channel', kwargs={'channel_id': self.channel_id})\n\nclass Review(models.Model):\n  user = models.ForeignKey(settings.AUTH_USER_MODEL, models.CASCADE)\n  channel = models.ForeignKey(Channel, models.CASCADE)\n  rating = models.PositiveSmallIntegerField(choices=((i,i) for i in range(1, 11)))\n  text = models.TextField(blank=True)\n  time_create = models.DateTimeField(auto_now_add=True)\n  time_update = models.DateTimeField(auto_now=True)\n</code></pre> <p>templates: - base.html - add_channel.html - channel.html - index.html - top.html</p> <p>base.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;{{ title }}&lt;/title&gt;\n  &lt;!-- &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1/new.min.css\"&gt; --&gt;\n  &lt;!-- &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/water.min.css\"&gt; --&gt;\n  &lt;!-- &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/dark.min.css\"&gt; --&gt;\n  &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/light.min.css\"&gt;\n  &lt;style&gt;\n    .avatar {\n      border-radius: 50%;\n      width: 100px;\n      height: 100px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;header&gt;\n    &lt;h1&gt;&lt;a href=\"{% url 'home' %}\"&gt;Educational YouTube&lt;/a&gt;&lt;/h1&gt;\n    &lt;a href=\"{% url 'home' %}\"&gt;Home&lt;/a&gt; / \n    &lt;a href=\"{% url 'top' %}\"&gt;Top&lt;/a&gt; / \n    &lt;a href=\"{% url 'add-channel' %}\"&gt;Add Channel&lt;/a&gt; / \n    {% if user.is_authenticated %}\n    &lt;a href=\"{% url 'users:logout' %}\"&gt;Log out&lt;/a&gt; / {{ user.username }} \n    {% else %}\n    &lt;a href=\"{% url 'users:login' %}\"&gt;Log in&lt;/a&gt; / &lt;a href=\"{% url 'users:register' %}\"&gt;Register&lt;/a&gt;\n    {% endif %}\n  &lt;/header&gt;\n{% block content %} {% endblock %}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>add_channel.html</p> <pre><code>{% extends 'base.html' %}\n{% load youtube_tags %}\n\n{% block content %}\n\n&lt;h2&gt;Add Channel&lt;/h2&gt;\n&lt;form action=\"\" method=\"POST\"&gt;\n  {% csrf_token %}\n  {{ form.as_p }}\n  &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n\n&lt;h3&gt;My Channels ({{ channels|length }})&lt;/h3&gt;\n{% if channels %}\n&lt;table&gt;\n&lt;tr&gt;\n  &lt;th&gt;&lt;/th&gt;\n  &lt;th&gt;Channel&lt;/th&gt;\n  &lt;th&gt;Subs&lt;/th&gt;\n  &lt;th&gt;Status&lt;/th&gt;\n&lt;/tr&gt;\n{% for channel in channels %}\n&lt;tr&gt;\n  &lt;td&gt;\n    &lt;a href=\"{{ channel.get_absolute_url }}\"&gt;\n    &lt;img src=\"{{ channel.icon_medium }}\" width=\"40\" height=\"40\" style=\"margin-bottom: 0 !important; border-radius: 50% !important;\"&gt;&lt;/a&gt;\n  &lt;/td&gt;\n  &lt;td&gt;&lt;a href=\"{{ channel.get_absolute_url }}\"&gt;{{ channel.title }}&lt;/a&gt;&lt;/td&gt;\n  &lt;td&gt;{{ channel.subs|intformat }}&lt;/td&gt;\n  {% if channel.is_approved %}\n  &lt;td style=\"color:green;\"&gt;Approved&lt;/td&gt;\n  {% else %}\n  &lt;td style=\"color:red;\"&gt;Not Approved&lt;/td&gt;\n  {% endif %}\n&lt;/tr&gt;\n{% endfor %}\n&lt;/table&gt;\n{% endif %}\n\n{% endblock %}\n</code></pre> <p>channel.html</p> <pre><code>{% extends 'base.html' %}\n{% load youtube_tags %}\n\n{% block content %}\n&lt;h2&gt;{{ channel.title }}&lt;/h2&gt;\n&lt;a href=\"{{ channel.url }}\" target=\"_blank\"&gt;&lt;img src=\"{{ channel.icon_high }}\" class=\"avatar\"&gt;&lt;/a&gt;\n&lt;p&gt;{{ channel.get_lang_display }} / {{ channel.get_category_display }} / {{ channel.get_theme_display }} /\n{{ channel.subs|intformat }} subs / {{ channel.views|intformat }} views / {{ channel.videos|intformat }} videos\n&lt;/p&gt;\n&lt;p&gt;{{ channel.description|linebreaks|urlize }}&lt;/p&gt;\n&lt;p&gt;Added by {{ channel.user.username|default:\"anon\" }} at {{ channel.time_create }}&lt;/p&gt;\n\n{% if user.is_authenticated %}\n&lt;h3&gt;Write Review&lt;/h3&gt;\n&lt;form action=\"/youtube/add-review/{{channel.channel_id}}/\" method=\"POST\"&gt;\n  {% csrf_token %}\n  {{ form.as_p }}\n&lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n{% endif %}\n\n&lt;h3&gt;Reviews ({{ reviews|length }})&lt;/h3&gt;\n{% for review in reviews %}\n&lt;p&gt;&lt;b&gt;{{ review.rating }}&lt;/b&gt; / &lt;b&gt;{{ review.user.username }}&lt;/b&gt; / {{ review.time_create }}\n{{ review.text|linebreaks }}&lt;/p&gt;\n{% if not forloop.last %}\n&lt;hr&gt;\n{% endif %}\n{% endfor %}\n\n{% endblock %}\n</code></pre> <p>index.html</p> <pre><code>{% extends 'base.html' %}\n\n{% block content %} \n&lt;h2&gt;Home&lt;/h2&gt;\n&lt;p&gt;\u041d\u0430 \u044d\u0442\u043e\u043c \u0441\u0430\u0439\u0442\u0435 \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0438 \u043d\u0430\u0443\u0447\u043d\u043e-\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 &lt;a href=\"{% url 'top' %}\"&gt;\u044e\u0442\u0443\u0431 \u043a\u0430\u043d\u0430\u043b\u044b&lt;/a&gt; \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u0438 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0430\u0445.&lt;/p&gt;\n&lt;p&gt;\u041f\u043e\u0441\u043b\u0435 &lt;a href=\"{% url 'users:register' %}\"&gt;\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438&lt;/a&gt; \u0438\u043b\u0438 &lt;a href=\"{% url 'users:login' %}\"&gt;\u0432\u0445\u043e\u0434\u0430 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442&lt;/a&gt; \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 &lt;a href=\"{% url 'add-channel' %}\"&gt;\u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u0442\u044c&lt;/a&gt; \u0441\u0432\u043e\u0438 \u043a\u0430\u043d\u0430\u043b\u044b.&lt;/p&gt;\n&lt;p&gt;\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0442\u0437\u044b\u0432\u044b \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043a\u0430\u043d\u0430\u043b\u0430.&lt;/p&gt;\n{% endblock %}\n</code></pre> <p>top.html</p> <pre><code>{% extends 'base.html' %}\n{% load youtube_tags %}\n\n{% block content %}\n&lt;h2&gt;List of educational YouTube channels&lt;/h2&gt;\n&lt;table&gt;\n&lt;tr&gt;\n  &lt;th&gt;&lt;/th&gt;\n  &lt;th&gt;Channel&lt;/th&gt;\n  &lt;th&gt;Subs&lt;/th&gt;\n  &lt;th&gt;Views&lt;/th&gt;\n  &lt;th&gt;Videos&lt;/th&gt;\n&lt;/tr&gt;\n{% for channel in channels %}\n&lt;tr&gt;\n  &lt;td&gt;\n    &lt;a href=\"{{ channel.get_absolute_url }}\"&gt;\n    &lt;img src=\"{{ channel.icon_medium }}\" width=\"40\" height=\"40\" style=\"margin-bottom: 0 !important; border-radius: 50% !important;\"&gt;&lt;/a&gt;\n  &lt;/td&gt;\n  &lt;td&gt;&lt;a href=\"{{ channel.get_absolute_url }}\"&gt;{{ channel.title }}&lt;/a&gt;&lt;/td&gt;\n  &lt;td&gt;{{ channel.subs|intformat }}&lt;/td&gt;\n  &lt;td&gt;{{ channel.views|intformat }}&lt;/td&gt;\n  &lt;td&gt;{{ channel.videos|intformat }}&lt;/td&gt;\n&lt;/tr&gt;\n{% endfor %}\n&lt;/table&gt;\n{% endblock %}\n</code></pre>"},{"location":"lab-2/lab-2/#users-app","title":"Users App","text":"<p>forms.py</p> <pre><code>from django import forms\nfrom django.contrib.auth import get_user_model\n\nclass LoginUserForm(forms.Form):\n  username = forms.CharField(label='Login', widget=forms.TextInput())\n  password = forms.CharField(label='Password', widget=forms.PasswordInput())\n\nclass RegisterUserForm(forms.ModelForm):\n  username = forms.CharField(label='Login', widget=forms.TextInput())\n  password = forms.CharField(label='Password', widget=forms.PasswordInput())\n  password2 = forms.CharField(label='Repeat Password', widget=forms.PasswordInput())\n\n  class Meta:\n    model = get_user_model()\n    fields = ['username', 'password']\n\n  def clean_password2(self):\n    cd = self.cleaned_data\n    if cd['password'] != cd['password2']:\n      raise forms.ValidationError(\"Passwords don't match\")\n    return cd['password']\n</code></pre> <p>urls.py</p> <pre><code>from django.urls import path\nfrom . import views\n\napp_name = 'users'\n\nurlpatterns = [\n  path('login/', views.login_user, name='login'),\n  path('logout/', views.logout_user, name='logout'),\n  path('register/', views.register, name='register'),\n]\n</code></pre> <p>views.py</p> <pre><code>from django.shortcuts import render\nfrom django.http import HttpResponse, HttpResponseRedirect\nfrom django.urls import reverse\nfrom django.contrib.auth import authenticate, login, logout\n\nfrom .forms import LoginUserForm, RegisterUserForm\n\ndef login_user(request):\n  if request.method == 'POST':\n    form = LoginUserForm(request.POST)\n    if form.is_valid():\n      cd = form.cleaned_data\n      user = authenticate(request, username=cd['username'], password=cd['password'])\n      if user and user.is_active:\n        login(request, user)\n        return HttpResponseRedirect(reverse('home'))\n  else:\n    form = LoginUserForm()\n  return render(request, 'users/login.html', {'form': form})\n\ndef logout_user(request):\n  logout(request)\n  return HttpResponseRedirect(reverse('users:login'))\n\ndef register(request):\n  if request.method == 'POST':\n    form = RegisterUserForm(request.POST)\n    if form.is_valid():\n      user = form.save(commit=False)\n      user.set_password(form.cleaned_data['password'])\n      user.save()\n      return HttpResponseRedirect(reverse('users:login'))\n  else:\n    form = RegisterUserForm()\n  return render(request, 'users/register.html', {'form': form})\n</code></pre> <p>login.html</p> <pre><code>{% extends 'base.html' %}\n\n{% block content %}\n\n&lt;h2&gt;Log in&lt;/h2&gt;\n&lt;form action=\"\" method=\"POST\"&gt;\n  {% csrf_token %}\n  {{ form.as_p }}\n  &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n\n{% endblock %}\n</code></pre> <p>register.html</p> <pre><code>{% extends 'base.html' %}\n\n{% block content %}\n\n&lt;h2&gt;Register&lt;/h2&gt;\n&lt;form action=\"\" method=\"POST\"&gt;\n  {% csrf_token %}\n  {{ form.as_p }}\n  &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n\n{% endblock %}\n</code></pre>"},{"location":"lab-2/practice-1/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.1","text":""},{"location":"lab-2/practice-1/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b: \u0434\u0430\u0442\u044c \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 Django WEB \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430.</p> <p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0441 \u043f\u043e\u043c\u0435\u0442\u043a\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0438\u0437 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u21161. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0432 \u043f\u0430\u043f\u043a\u0443 \u044d\u0442\u043e\u0433\u043e \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f sutdents/\u0433\u0440\u0443\u043f\u043f\u0430/practical_works/\u0444\u0430\u043c\u0438\u043b\u0438\u044f_\u0438\u043c\u044f/simple_django_web_project. \u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u0438\u0436\u0435. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043e \u0444\u0430\u0439\u043b\u0435 gitignore.</p>"},{"location":"lab-2/practice-1/#code","title":"Code","text":"<p>admin.py:</p> <pre><code>from django.contrib import admin\nfrom .models import Owner, License, Car, Ownership\n\nadmin.site.register(Owner)\nadmin.site.register(License)\nadmin.site.register(Car)\nadmin.site.register(Ownership)\n</code></pre> <p>models.py:</p> <pre><code>from django.db import models\n\nclass Owner(models.Model):\n  last_name = models.CharField(max_length=30, null=False, blank=False)\n  first_name = models.CharField(max_length=30, null=False, blank=False)\n  date_of_birth = models.DateField(null=True, blank=True)\n\n  def __str__(self):\n    return f'{self.first_name} {self.last_name}'\n\nclass License(models.Model):\n  owner = models.ForeignKey(Owner, models.CASCADE, null=False, blank=False)\n  number = models.CharField(max_length=10, null=False, blank=False)\n  type = models.CharField(max_length=10, null=False, blank=False)\n  date_of_issue = models.DateField(null=False, blank=False)\n\n  def __str__(self):\n    return f'{self.owner}'\n\nclass Car(models.Model):\n  number = models.CharField(max_length=15, null=False, blank=False)\n  brand = models.CharField(max_length=20, null=False, blank=False)\n  model = models.CharField(max_length=20, null=False, blank=False)\n  color = models.CharField(max_length=30, null=True, blank=True)\n\n  def __str__(self):\n    return f'{self.number}, {self.brand}, {self.model}'\n\nclass Ownership(models.Model):\n  owner = models.ForeignKey(Owner, models.CASCADE, null=True, blank=True)\n  car = models.ForeignKey(Car, models.CASCADE, null=True, blank=True)\n  start_date = models.DateField(null=False, blank=False)\n  end_date = models.DateField(null=True, blank=True)\n\n  def __str__(self):\n    return f'{self.car.number}, {self.owner}, {self.start_date} - {self.end_date}'\n</code></pre> <p>urls.py:</p> <pre><code>from django.urls import path \nfrom . import views\n\nurlpatterns = [\n  path('owner/&lt;int:owner_id&gt;/', views.owner),\n]\n</code></pre> <p>views.py:</p> <pre><code>from django.shortcuts import render\nfrom django.http import Http404\nfrom .models import Owner\n\ndef owner(request, owner_id):\n  try:\n    x = Owner.objects.get(pk=owner_id)\n  except Owner.DoesNotExist:\n    raise Http404(\"Owner does not exist\")\n  return render(request, 'owner.html', {'owner': x})\n</code></pre> <p>owner.html:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Owner&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  First name: {{ owner.first_name }} &lt;br&gt;\n  Last name: {{ owner.last_name }} &lt;br&gt;\n  Date of birth: {{ owner.date_of_birth }}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"lab-2/practice-2/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.2","text":""},{"location":"lab-2/practice-2/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b: \u0434\u0430\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 CRUD(Create, read, update and delete) \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django WEB \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0434\u043b\u0430\u043d\u0438\u044f \u0441 \u043f\u043e\u043c\u0435\u0442\u043a\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0438\u0437 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u21162. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0437\u0430\u043b\u0438\u0442\u044c \u0432 \u043f\u0430\u043f\u043a\u0443 \u044d\u0442\u043e\u0433\u043e \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f sutdents/\u0433\u0440\u0443\u043f\u043f\u0430/practical_works/\u0444\u0430\u043c\u0438\u043b\u0438\u044f_\u0438\u043c\u044f/simple_django_web_project. \u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u0438\u0436\u0435. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043e \u0444\u0430\u0439\u043b\u0435 gitignore.</p>"},{"location":"lab-2/practice-2/#code","title":"Code","text":"<p>forms.py:</p> <pre><code>from django import forms\nfrom .models import Owner\n\nclass OwnerForm(forms.ModelForm):\n  class Meta:\n    model = Owner\n    fields = '__all__'\n</code></pre> <p>views.py:</p> <pre><code>from django.shortcuts import render\nfrom django.http import Http404\nfrom django.views.generic.list import ListView\nfrom django.views.generic.detail import DetailView\nfrom django.views.generic.edit import UpdateView, CreateView, DeleteView\nfrom .models import Owner, Car\nfrom .forms import OwnerForm\n\ndef owner(request, pk):\n  try:\n    x = Owner.objects.get(pk=pk)\n  except Owner.DoesNotExist:\n    raise Http404(\"Owner does not exist\")\n  return render(request, 'owner.html', {'owner': x})\n\ndef owners(request):\n  try:\n    x = Owner.objects.all()\n  except Owner.DoesNotExist:\n    raise Http404(\"Owner does not exist\")\n  return render(request, 'owners.html', {'owners': x})\n\nclass CarList(ListView):\n  model = Car\n  template_name = 'cars.html'\n\nclass CarDetail(DetailView):\n  model = Car\n  template_name = 'car.html'\n\ndef owner_create(request):\n  form = OwnerForm(request.POST or None)\n  if form.is_valid():\n    form.save()\n  return render(request, \"owner_create.html\", {'form': form})\n\nclass CarUpdate(UpdateView):\n  model = Car\n  fields = '__all__'\n  template_name = 'car_update.html'\n  success_url = '/car/'\n\nclass CarCreate(CreateView):\n  model = Car\n  fields = '__all__'\n  template_name = 'car_create.html'\n  success_url = '/car/'\n\nclass CarDelete(DeleteView):\n  model = Car\n  template_name = 'car_delete.html'\n  success_url = '/car/'\n</code></pre> <p>urls.py:</p> <pre><code>from django.urls import path \nfrom . import views\n\nurlpatterns = [\n  path('owner/', views.owners),\n  path('owner/&lt;int:pk&gt;/', views.owner),\n  path('car/', views.CarList.as_view()),\n  path('car/&lt;int:pk&gt;/', views.CarDetail.as_view()),\n  path('owner/create/', views.owner_create),\n  path('car/&lt;int:pk&gt;/update/', views.CarUpdate.as_view()),\n  path('car/create/', views.CarCreate.as_view()),\n  path('car/&lt;int:pk&gt;/delete/', views.CarDelete.as_view()),\n]\n</code></pre> <p>.py:</p> <pre><code></code></pre> <p>.py:</p> <pre><code></code></pre> <p>car_create.html:</p> <pre><code>...\n&lt;form method=\"post\"&gt;\n  {% csrf_token %}\n  {{ form.as_p }}\n  &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n...\n</code></pre> <p>car_delete.html:</p> <pre><code>...\n&lt;form method=\"post\"&gt;{% csrf_token %}\n  &lt;p&gt;Are you sure you want to delete car \"{{ object }}\"?&lt;/p&gt;\n  &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n&lt;br&gt;&lt;br&gt;\n&lt;a href=\"/car/\"&gt;Get back&lt;/a&gt;\n...\n</code></pre> <p>car_update.html:</p> <pre><code>...\n&lt;form method=\"post\"&gt;\n  {% csrf_token %}\n  {{ form.as_p }}\n  &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n...\n</code></pre> <p>car.html:</p> <pre><code>...\nNumber: {{ object.number }} &lt;br&gt;\nBrand: {{ object.brand }} &lt;br&gt;\nModel: {{ object.model }} &lt;br&gt;\nColor: {{ object.color }}\n...\n</code></pre> <p>cars.html:</p> <pre><code>...\n{% for car in object_list %}\nNumber: {{ car.number }} &lt;br&gt;\nBrand: {{ car.brand }} &lt;br&gt;\nModel: {{ car.model }} &lt;br&gt;\nColor: {{ car.color }}\n{% if not forloop.last %}&lt;hr&gt;{% endif %}\n{% endfor %}\n...\n</code></pre> <p>owner_create.html:</p> <pre><code>...\n&lt;form method=\"post\"&gt;\n  {% csrf_token %}\n  {{ form.as_p }}\n  &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n...\n</code></pre> <p>owner.html:</p> <pre><code>...\nFirst name: {{ owner.first_name }} &lt;br&gt;\nLast name: {{ owner.last_name }} &lt;br&gt;\nDate of birth: {{ owner.date_of_birth }}\n...\n</code></pre> <p>owners.html:</p> <pre><code>...\n{% for owner in owners %}\nFirst name: {{ owner.first_name }} &lt;br&gt;\nLast name: {{ owner.last_name }} &lt;br&gt;\nDate of birth: {{ owner.date_of_birth }}\n{% if not forloop.last %}&lt;hr&gt;{% endif %}\n{% endfor %}\n...\n</code></pre>"},{"location":"lab-2/practice-3/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.3","text":""},{"location":"lab-2/practice-3/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0434\u043b\u0430\u043d\u0438\u044f \u0441 \u043f\u043e\u043c\u0435\u0442\u043a\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0438\u0437 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u21163.  \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0437\u0430\u043b\u0438\u0442\u044c \u0432 \u043f\u0430\u043f\u043a\u0443 \u044d\u0442\u043e\u0433\u043e \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f sutdents/\u0433\u0440\u0443\u043f\u043f\u0430/practical_works/\u0444\u0430\u043c\u0438\u043b\u0438\u044f_\u0438\u043c\u044f/simple_django_web_project. \u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u0438\u0436\u0435. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043e \u0444\u0430\u0439\u043b\u0435 gitignore.</p>"},{"location":"lab-2/practice-3/#code","title":"Code","text":"<p>settings.py</p> <pre><code>...\nAUTH_USER_MODEL = 'project_first_app.Owner'\n</code></pre> <p>models.py:</p> <pre><code>...\nclass Owner(AbstractUser):\n  last_name = models.CharField(max_length=30, null=False, blank=False)\n  first_name = models.CharField(max_length=30, null=False, blank=False)\n  date_of_birth = models.DateField(null=True, blank=True)\n  cars = models.ManyToManyField(Car, through='Ownership', null=True, blank=True)\n\n  passport_number = models.CharField(max_length=30, null=True, blank=True)\n  home_address = models.CharField(max_length=100, null=True, blank=True)\n  nationality = models.CharField(max_length=30, null=True, blank=True)\n\n  def __str__(self):\n    return f'{self.first_name} {self.last_name}'\n\nclass License(models.Model):\n  owner = models.ForeignKey(settings.AUTH_USER_MODEL, models.CASCADE, null=False, blank=False)\n  number = models.CharField(max_length=10, null=False, blank=False)\n  type = models.CharField(max_length=10, null=False, blank=False)\n  date_of_issue = models.DateField(null=False, blank=False)\n\n  def __str__(self):\n    return f'{self.owner}'\n\nclass Ownership(models.Model):\n  owner = models.ForeignKey(settings.AUTH_USER_MODEL, models.CASCADE, null=True, blank=True)\n  car = models.ForeignKey(Car, models.CASCADE, null=True, blank=True)\n  start_date = models.DateField(null=False, blank=False)\n  end_date = models.DateField(null=True, blank=True)\n\n  def __str__(self):\n    return f'{self.car.number}, {self.owner}, {self.start_date} - {self.end_date}'\n</code></pre>"}]}